/* Generated by Yosys 0.7 (git sha1 61f6811) */

module apc16bits(in, out);
  wire _00_;
  wire _01_;
  wire _02_;
  wire \adder1_lv1.a ;
  wire \adder1_lv1.b ;
  wire \adder1_lv1.cin ;
  wire \adder1_lv1.cout ;
  wire \adder1_lv1.d ;
  wire \adder1_lv1.m3.d ;
  wire \adder1_lv2.b ;
  wire \adder1_lv2.cin ;
  wire \adder1_lv2.cout ;
  wire \adder1_lv2.d ;
  wire \adder1_lv2.m3.d ;
  wire \adder2_lv1.a ;
  wire \adder2_lv1.b ;
  wire \adder2_lv1.cin ;
  wire \adder2_lv1.d ;
  wire \adder2_lv1.m3.d ;
  wire \adder2_lv2.cin ;
  wire \adder2_lv2.d ;
  wire \adder2_lv2.m3.d ;
  wire \half1.a ;
  wire \half1.cout ;
  wire \half2.cout ;
  input [15:0] in;
  output [4:0] out;
  or_bb _03_ (
    .a(in[1]),
    .b(in[0]),
    .c(\adder1_lv1.a )
  );
  and_bb _04_ (
    .a(in[3]),
    .b(in[2]),
    .c(\adder1_lv1.b )
  );
  or_bb _05_ (
    .a(in[5]),
    .b(in[4]),
    .c(\adder1_lv1.cin )
  );
  and_bb _06_ (
    .a(in[7]),
    .b(in[6]),
    .c(\adder2_lv1.a )
  );
  or_bb _07_ (
    .a(in[9]),
    .b(in[8]),
    .c(\adder2_lv1.b )
  );
  and_bb _08_ (
    .a(in[11]),
    .b(in[10]),
    .c(\adder2_lv1.cin )
  );
  or_bb _09_ (
    .a(in[13]),
    .b(in[12]),
    .c(\adder2_lv2.cin )
  );
  and_bb _10_ (
    .a(in[15]),
    .b(in[14]),
    .c(\half1.a )
  );
  maj_bbb _11_ (
    .a(\adder1_lv1.cin ),
    .b(\adder1_lv1.b ),
    .c(\adder1_lv1.a ),
    .d(\adder1_lv1.cout )
  );
  maj_bbi _12_ (
    .a(\adder1_lv1.b ),
    .b(\adder1_lv1.a ),
    .c(\adder1_lv1.cin ),
    .d(\adder1_lv1.d )
  );
  maj_bbi _13_ (
    .a(\adder1_lv1.d ),
    .b(\adder1_lv1.cin ),
    .c(\adder1_lv1.cout ),
    .d(\adder1_lv1.m3.d )
  );
  maj_bbb _14_ (
    .a(\adder1_lv2.cin ),
    .b(\adder1_lv2.b ),
    .c(\adder1_lv1.cout ),
    .d(\adder1_lv2.cout )
  );
  maj_bbi _15_ (
    .a(\adder1_lv2.b ),
    .b(\adder1_lv1.cout ),
    .c(\adder1_lv2.cin ),
    .d(\adder1_lv2.d )
  );
  maj_bbi _16_ (
    .a(\adder1_lv2.d ),
    .b(\adder1_lv2.cin ),
    .c(\adder1_lv2.cout ),
    .d(\adder1_lv2.m3.d )
  );
  maj_bbb _17_ (
    .a(\adder2_lv1.cin ),
    .b(\adder2_lv1.b ),
    .c(\adder2_lv1.a ),
    .d(\adder1_lv2.b )
  );
  maj_bbi _18_ (
    .a(\adder2_lv1.b ),
    .b(\adder2_lv1.a ),
    .c(\adder2_lv1.cin ),
    .d(\adder2_lv1.d )
  );
  maj_bbi _19_ (
    .a(\adder2_lv1.d ),
    .b(\adder2_lv1.cin ),
    .c(\adder1_lv2.b ),
    .d(\adder2_lv1.m3.d )
  );
  maj_bbb _20_ (
    .a(\adder2_lv2.cin ),
    .b(\adder2_lv1.m3.d ),
    .c(\adder1_lv1.m3.d ),
    .d(\adder1_lv2.cin )
  );
  maj_bbi _21_ (
    .a(\adder2_lv1.m3.d ),
    .b(\adder1_lv1.m3.d ),
    .c(\adder2_lv2.cin ),
    .d(\adder2_lv2.d )
  );
  maj_bbi _22_ (
    .a(\adder2_lv2.d ),
    .b(\adder2_lv2.cin ),
    .c(\adder1_lv2.cin ),
    .d(\adder2_lv2.m3.d )
  );
  and_bb _23_ (
    .a(\adder2_lv2.m3.d ),
    .b(\half1.a ),
    .c(\half1.cout )
  );
  or_bb _24_ (
    .a(\adder2_lv2.m3.d ),
    .b(\half1.a ),
    .c(_00_)
  );
  and_bi _25_ (
    .a(_00_),
    .b(\half1.cout ),
    .c(out[1])
  );
  and_bb _26_ (
    .a(\half1.cout ),
    .b(\adder1_lv2.m3.d ),
    .c(\half2.cout )
  );
  or_bb _27_ (
    .a(\half1.cout ),
    .b(\adder1_lv2.m3.d ),
    .c(_01_)
  );
  and_bi _28_ (
    .a(_01_),
    .b(\half2.cout ),
    .c(out[2])
  );
  and_bb _29_ (
    .a(\half2.cout ),
    .b(\adder1_lv2.cout ),
    .c(out[4])
  );
  or_bb _30_ (
    .a(\half2.cout ),
    .b(\adder1_lv2.cout ),
    .c(_02_)
  );
  and_bi _31_ (
    .a(_02_),
    .b(out[4]),
    .c(out[3])
  );
  assign out[0] = 1'b0;
endmodule
